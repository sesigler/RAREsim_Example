# scale_color_manual(values=cbPalette) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
p3
# pop <- 'NFE'
p3 <- ggplot(melted_obs[which(melted_obs$data == 'RAREsim functional-120%'),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bin') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=melted_exp[which(melted_exp$data == 'gonomAD functional-120%'),],
aes(x=variable, y=value), shape  = 8) +
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank()) +
# scale_color_manual(values=cbPalette) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
p3
# pop <- 'NFE'
p3 <- ggplot(melted_obs[which(melted_obs$data == 'RAREsim functional-120%'),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bin') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=melted_exp[which(melted_exp$data == 'gnomAD functional-120%'),],
aes(x=variable, y=value), shape  = 8) +
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank()) +
# scale_color_manual(values=cbPalette) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
p3
cbPalette1 <- c("#56B4E9", "#CC79A7")
cbPalette2 <- c("#56B4E9", "#CC79A7", "#D55E00")
p1 <- ggplot(melted_obs[which(melted_obs$data == 'RAREsim functional-120%'),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE'),
y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=melted_exp[which(melted_exp$data == 'gnomAD functional-120%'),],
aes(x=variable, y=value), shape  = 8) +
# theme(axis.title.x = element_blank()) +
# theme(axis.title.y = element_blank()) +
scale_color_manual(values=cbPalette) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
p1 <- ggplot(melted_obs[which(melted_obs$data == 'RAREsim functional-120%'),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE'),
y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=melted_exp[which(melted_exp$data == 'gnomAD functional-120%'),],
aes(x=variable, y=value), shape  = 8) +
# theme(axis.title.x = element_blank()) +
# theme(axis.title.y = element_blank()) +
scale_color_manual(values=cbPalette1) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
p1
p1 <- ggplot(melted_obs[which(melted_obs$data == 'RAREsim functional-120%'),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE, Pruning: 120% Functional'),
y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=melted_exp[which(melted_exp$data == 'gnomAD functional-120%'),],
aes(x=variable, y=value), shape  = 8) +
# theme(axis.title.x = element_blank()) +
# theme(axis.title.y = element_blank()) +
scale_color_manual(values=cbPalette1) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
p1
p1 <- ggplot(melted_obs[which(melted_obs$data == 'RAREsim functional-120%'),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: 120% Functional'),
y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=melted_exp[which(melted_exp$data == 'gnomAD functional-120%'),],
aes(x=variable, y=value), shape  = 8) +
# theme(axis.title.x = element_blank()) +
# theme(axis.title.y = element_blank()) +
scale_color_manual(values=cbPalette1) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
p1
cbPalette2 <- c("#56B4E9", "#0072B2", "#CC79A7", "#D55E00")
# Functional & Synonymous -100%
p2 <- ggplot(melted_obs[which(melted_obs$data == 'RAREsim functional-100%' & melted_obs$data == 'RAREsim synonymous-100%'),],
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: 100% Functional and 100% Synonymous'),
y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=melted_exp[which(melted_exp$data == 'gnomAD functional-100%' & melted_exp$data == 'gnomAD synonymous-100%'),],
aes(x=variable, y=value), shape  = 8) +
# theme(axis.title.x = element_blank()) +
# theme(axis.title.y = element_blank()) +
scale_color_manual(values=cbPalette1) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
p2
p2 <- ggplot(subset(melted_obs, data %in% c('RAREsim functional-100%' , 'RAREsim synonymous-100%')),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: 100% Functional and 100% Synonymous'),
y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% c('gnomAD functional-100%' , 'gnomAD synonymous-100%')),
aes(x=variable, y=value), shape  = 8) +
# theme(axis.title.x = element_blank()) +
# theme(axis.title.y = element_blank()) +
scale_color_manual(values=cbPalette1) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
p2
p2 <- ggplot(subset(melted_obs, data %in% c('RAREsim functional-100%' , 'RAREsim synonymous-100%')),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: 100% Functional and 100% Synonymous'),
y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% c('gnomAD functional-100%' , 'gnomAD synonymous-100%')),
aes(x=variable, y=value), shape  = 8) +
# theme(axis.title.x = element_blank()) +
# theme(axis.title.y = element_blank()) +
scale_color_manual(values=cbPalette2) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
p2
# Functional-100%
p2 <- ggplot(subset(melted_obs, data %in% 'RAREsim functional-100%'),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: 100% Functional'),
y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% 'gnomAD functional-100%'),
aes(x=variable, y=value), shape  = 8) +
# theme(axis.title.x = element_blank()) +
# theme(axis.title.y = element_blank()) +
scale_color_manual(values=cbPalette2) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
p2
cbPalette1 <- c("#56B4E9", "#CC79A7")
cbPalette2 <- c("#56B4E9", "#D55E00")
# Functional-100%
p2 <- ggplot(subset(melted_obs, data %in% 'RAREsim functional-100%'),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: 100% Functional'),
y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% 'gnomAD functional-100%'),
aes(x=variable, y=value), shape  = 8) +
# theme(axis.title.x = element_blank()) +
# theme(axis.title.y = element_blank()) +
scale_color_manual(values=cbPalette1) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
p2
cbPalette2 <- c("#0072B2", "#D55E00") #Synonymous
# Synonymous-100%
syn100 <- ggplot(subset(melted_obs, data %in% 'RAREsim synonymous-100%'),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: 100% Synonymous'),
y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% 'gnomAD synonymous-100%'),
aes(x=variable, y=value), shape  = 8) +
# theme(axis.title.x = element_blank()) +
# theme(axis.title.y = element_blank()) +
scale_color_manual(values=cbPalette2) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
syn100
cols_fun <- c("#56B4E9", "#CC79A7") #Functional
cols_syn <- c("#0072B2", "#D55E00") #Synonymous
# Functional-99%
fun99 <- ggplot(subset(melted_obs, data %in% 'RAREsim functional-99%'),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: ', p_conf1, '% Functional'),
y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% 'gnomAD functional-99%'),
aes(x=variable, y=value), shape  = 8) +
# theme(axis.title.x = element_blank()) +
# theme(axis.title.y = element_blank()) +
scale_color_manual(values=cols_fun) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
fun99
# Synonymous-99%
syn99 <- ggplot(subset(melted_obs, data %in% 'RAREsim synonymous-99%'),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: ', p_conf1, '% Synonymous'),
y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% 'gnomAD synonymous-99%'),
aes(x=variable, y=value), shape  = 8) +
# theme(axis.title.x = element_blank()) +
# theme(axis.title.y = element_blank()) +
scale_color_manual(values=cols_syn) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
syn99
# Functional-80%
fun80 <- ggplot(subset(melted_obs, data %in% 'RAREsim functional-80%'),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: ', p_conf2, '% Functional'),
y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% 'gnomAD functional-80%'),
aes(x=variable, y=value), shape  = 8) +
# theme(axis.title.x = element_blank()) +
# theme(axis.title.y = element_blank()) +
scale_color_manual(values=cols_fun) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
fun80
# Synonymous-80%
syn80 <- ggplot(subset(melted_obs, data %in% 'RAREsim synonymous-80%'),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: ', p_conf2, '% Synonymous'),
y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% 'gnomAD synonymous-80%'),
aes(x=variable, y=value), shape  = 8) +
# theme(axis.title.x = element_blank()) +
# theme(axis.title.y = element_blank()) +
scale_color_manual(values=cols_syn) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
syn80
cols_fun <- c("#009E73", "#CC79A7") #Functional
# Functional-120%
fun120 <- ggplot(subset(melted_obs, data %in% 'RAREsim functional-120%'),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: ', p_case, '% Functional'),
y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% 'gnomAD functional-120%'),
aes(x=variable, y=value), shape  = 8) +
# theme(axis.title.x = element_blank()) +
# theme(axis.title.y = element_blank()) +
scale_color_manual(values=cols_fun) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
fun120
ggsave(file = paste0(dir_out, 'obs_v_exp_MACbins_', Pop2, '_fun120.jpg'),
plot = fun120, height = 5, width = 12, units = 'in')
# Functional-100%
fun100 <- ggplot(subset(melted_obs, data %in% 'RAREsim functional-100%'),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: 100% Functional'),
y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% 'gnomAD functional-100%'),
aes(x=variable, y=value), shape  = 8) +
# theme(axis.title.x = element_blank()) +
# theme(axis.title.y = element_blank()) +
scale_color_manual(values=cols_fun) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
fun100
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)
}
##### Extract the legend:
legend100<-g_legend(fun100)
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legend100, nrow=2, heights = c(10, 1.1))
##### Extract the legend:
legfun100<-g_legend(fun100)
legsyn100<-g_legend(syn100)
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
c(legfun100, legsyn100), nrow=2, heights = c(10, 1.1))
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legfun100, legsyn100, nrow=2, heights = c(10, 1.1))
grid.arrange(fun100, syn100, ncol = 2)
cols_all <- c("#009E73", "#CC79A7", "#0072B2", "#D55E00")
##### Extract the legend:
both100 <- ggplot(subset(melted_obs, data %in% c('RAREsim functional-100%', 'RAREsim synonymous-100%')),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% c('gnomAD functional-100%', 'gnomAD synonymous-100%')),
aes(x=variable, y=value), shape  = 8) +
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank()) +
scale_color_manual(values=cols_all) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
both100
cols_all <- c("#009E73", "#0072B2", "#CC79A7", "#D55E00")
##### Extract the legend:
both100 <- ggplot(subset(melted_obs, data %in% c('RAREsim functional-100%', 'RAREsim synonymous-100%')),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% c('gnomAD functional-100%', 'gnomAD synonymous-100%')),
aes(x=variable, y=value), shape  = 8) +
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank()) +
scale_color_manual(values=cols_all) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
both100
legboth<-g_legend(both100)
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legboth, nrow=2, heights = c(10, 1.1))
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legboth, nrow=2, heights = c(10, 1))
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legboth, nrow=1, heights = c(10, 1))
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legboth, nrow=2, heights = c(10, 1))
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legboth, ncol=2, heights = c(10, 1))
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legboth, nrow=3, heights = c(10, 1))
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legboth, nrow=2, heights = c(10, 1))
##### Extract the legend:
both100 <- ggplot(subset(melted_obs, data %in% c('RAREsim functional-100%', 'RAREsim synonymous-100%')),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% c('gnomAD functional-100%', 'gnomAD synonymous-100%')),
aes(x=variable, y=value), shape  = 8) +
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank()) +
scale_color_manual(values=cols_all) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(legend.position = "bottom") +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
both100
legboth<-g_legend(both100)
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legboth, nrow=2, heights = c(10, 1))
# Functional-100%
fun100 <- ggplot(subset(melted_obs, data %in% 'RAREsim functional-100%'),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: 100% Functional and 100% Synonymous'),
y = 'Number of Variants') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% 'gnomAD functional-100%'),
aes(x=variable, y=value), shape  = 8) +
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank()) +
scale_color_manual(values=cols_fun) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
# Synonymous-100%
syn100 <- ggplot(subset(melted_obs, data %in% 'RAREsim synonymous-100%'),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
# labs(title = paste0('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: 100% Synonymous'),
#      y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% 'gnomAD synonymous-100%'),
aes(x=variable, y=value), shape  = 8) +
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank()) +
scale_color_manual(values=cols_syn) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legboth, nrow=2, heights = c(10, 1))
# Functional-100%
fun100 <- ggplot(subset(melted_obs, data %in% 'RAREsim functional-100%'),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% 'gnomAD functional-100%'),
aes(x=variable, y=value), shape  = 8) +
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank()) +
scale_color_manual(values=cols_fun) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
# Synonymous-100%
syn100 <- ggplot(subset(melted_obs, data %in% 'RAREsim synonymous-100%'),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% 'gnomAD synonymous-100%'),
aes(x=variable, y=value), shape  = 8) +
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank()) +
scale_color_manual(values=cols_syn) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legboth, nrow=2, heights = c(10, 1),
top = textGrob('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: 100% Functional and 100% Synonymous',
gp=gpar(fontsize=20,font=3)))
library(grid) # for textGrob and gpar
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legboth, nrow=2, heights = c(10, 1),
top = textGrob('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE \nPruning: 100% Functional and 100% Synonymous',
gp=gpar(fontsize=20,font=3)))
# Functional-100%
fun100 <- ggplot(subset(melted_obs, data %in% 'RAREsim functional-100%'),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = 'Pruning: 100% Functional', y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% 'gnomAD functional-100%'),
aes(x=variable, y=value), shape  = 8) +
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank()) +
scale_color_manual(values=cols_fun) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
fun100
# Synonymous-100%
syn100 <- ggplot(subset(melted_obs, data %in% 'RAREsim synonymous-100%'),
aes(x=variable, y=value , col = data)) +
geom_boxplot() +
labs(title = 'Pruning: 100% Synonymous', y = 'Number of Variants', x = 'MAC Bins') +
theme(axis.text.x = element_text(angle = 35, hjust=0.65)) +
geom_point(data=subset(melted_exp, data %in% 'gnomAD synonymous-100%'),
aes(x=variable, y=value), shape  = 8) +
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank()) +
scale_color_manual(values=cols_syn) +
# guides(color = guide_legend(override.aes=list(shape = c(8, 1, 4, 8, 8, 8)))) +
theme(plot.margin = unit(c(0.2,0.5,0.1,0.2), "cm"))
syn100
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legboth, nrow=2, heights = c(10, 1),
top = textGrob('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE',
gp=gpar(fontsize=20,font=3)))
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legboth, nrow=2, heights = c(10, 1),
top = textGrob('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE',
gp = gpar(fontsize = 18, font = 2)))
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legboth, nrow=2, heights = c(10, 1),
top = textGrob('Observed vs Expected Number of Variants per MAC bin \nPop: 100% NFE',
gp = gpar(fontsize = 18, font = 1)))
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legboth, nrow=2, heights = c(10, 1),
top = textGrob('100% NFE: Observed vs Expected Number of Variants per MAC bin',
gp = gpar(fontsize = 18, font = 1)))
pruned100 <- grid.arrange(arrangeGrob(fun100 + theme(legend.position="none"),
syn100 + theme(legend.position="none"),
nrow=1),
legboth, nrow=2, heights = c(10, 1),
left = 'Number of Variants',
top = textGrob('100% NFE: Observed vs Expected Number of Variants per MAC bin',
gp = gpar(fontsize = 18, font = 1)))
# Save the plot
ggsave(file = paste0(dir_out, 'obs_v_exp_MACbins_', Pop2, '_fun100_syn100.jpg'),
plot = pruned100, height = 5, width = 12, units = 'in')
