library(data.table)
library(dplyr)
Pop = 'NFE'
p_case = 120
p_conf = 99
Nsim = 20000
# Number of individuals in each dataset
Ncase = Nint = 5000
Ncc = 10000 #cc10k = 10000, cc5k = 5000
# Haplotype column indices
cols = 1:40000
mac_dir = 'C:/Users/sagee/Documents/HendricksLab/mastersProject/input/'
dir_in = 'C:/Users/sagee/Documents/HendricksLab/mastersProject/input/'
### read in the expected number of functional and synonymous variants from RAREsim
exp_fun_case = read.table(paste0(mac_dir, 'MAC_bin_estimates_', Nsim, "_", Pop, '_fun_', p_case,  '.txt'), header=T, sep='\t')
exp_syn = read.table(paste0(mac_dir, 'MAC_bin_estimates_', Nsim, "_", Pop, '_syn_100.txt'), header=T, sep='\t')
exp_fun = read.table(paste0(mac_dir, 'MAC_bin_estimates_', Nsim, "_", Pop, '_fun_100.txt'), header=T, sep='\t')
exp_fun_conf = read.table(paste0(mac_dir, 'MAC_bin_estimates_', Nsim, "_", Pop, '_fun_', p_conf, '.txt'), header=T, sep='\t')
exp_syn_conf = read.table(paste0(mac_dir, 'MAC_bin_estimates_', Nsim, "_", Pop, '_syn_', p_conf, '.txt'), header=T, sep='\t')
set.seed(1) # Will be different for each replicate but same for each run
j = 1
View(exp_fun)
exp_fun$Expected_var*1.2
exp_fun$Expected_var*0.99
View(exp_fun_case)
View(exp_fun_conf)
View(exp_syn)
exp_syn$Expected_var*0.99
View(exp_syn_conf)
# read in the legend file
leg = read.table(paste0(dir_in, 'chr19.block37.', Pop, '.sim', j, '.legend'), header=T, sep='\t')
leg$row = 1:nrow(leg)
# read in the haplotype file
hap = fread(paste0(dir_in, 'chr19.block37.', Pop, '.sim', j, '.all.', p_case, 'fun.100syn.haps.gz'))
hap = as.data.frame(hap)
# add allele counts to the haplotypes
leg$count = rowSums(hap)
# convert to minor allele counts
leg$MAC = ifelse(leg$count>Nsim, 2*Nsim-leg$count, leg$count)
View(leg)
# Select the columns for necessary data sets
cases = sort(sample(x=cols, size = 2*Ncase, replace = FALSE))
int = sort(sample(x=cols[! cols %in% cases], size = 2*Nint, replace = FALSE))
cc = sort(sample(x=cols[! cols %in% c(cases, int)], size = 2*Ncc, replace = FALSE))
# subset the case haplotypes (120% fun and 100% syn)
hap_cases_pcase = hap[, cases]
# 120% Functional
fun120_bins1 = which(leg_fun$MAC==1)
# subset the legend file to the functional variants (those are the only ones we'll prune)
leg_fun = leg %>% filter(fun=="fun")
leg_syn = leg %>% filter(fun=="syn")
1133+439
# 120% Functional
fun120_bins1 = which(leg_fun$MAC==1)
fun120_bins2 = which(leg_fun$MAC==2)
fun120_bins3 = which(leg_fun$MAC>=3 & leg_fun$MAC<=5)
fun120_bins4 = which(leg_fun$MAC>=6 & leg_fun$MAC<=exp_fun_case[4, 2])
fun120_bins5 = which(leg_fun$MAC>=exp_fun_case[5, 1] & leg_fun$MAC<=exp_fun_case[5, 2])
fun120_bins6 = which(leg_fun$MAC>=exp_fun_case[6, 1] & leg_fun$MAC<=exp_fun_case[6, 2])
fun120_bins7 = which(leg_fun$MAC>=exp_fun_case[7, 1] & leg_fun$MAC<=exp_fun_case[7, 2])
MAC_ests_fun_120 = exp_fun_case
MAC_ests_fun_120$Observed = c(length(fun120_bins1), length(fun120_bins2),length(fun120_bins3),
length(fun120_bins4), length(fun120_bins5), length(fun120_bins6),
length(fun120_bins7))
View(MAC_ests_fun_120)
t(MAC_ests_fun_120)
# Vectors to store the observed variants per MAC bin
obs_MACbin_fun_pcase = obs_MACbin_fun_exp = obs_MACbin_fun_pconf = c()
obs_MACbin_syn_exp = obs_MACbin_syn_pconf = c()
funBins_pcase = c(length(fun120_bins1), length(fun120_bins2),length(fun120_bins3),
length(fun120_bins4), length(fun120_bins5), length(fun120_bins6),
length(fun120_bins7))
obs_MACbin_fun_pcase = rbind(obs_MACbin_fun_pcase, funBins_pcase)
obs_MACbin_fun_pcase = rbind(obs_MACbin_fun_pcase, funBins_pcase)
View(obs_MACbin_fun_pcase)
View(MAC_ests_fun_120)
# Vectors to store the observed variants per MAC bin
obs_MACbin_syn_exp <- data.frame(matrix(ncol = 8, nrow = 100))
View(obs_MACbin_syn_exp)
# Vectors to store the observed variants per MAC bin
obs_MACbin_syn_exp <- data.frame(matrix(ncol = 9, nrow = 100))
colnames(obs_MACbin_syn_exp) <- c('Singletons', 'Doubletons', 'MAC.3.5', 'MAC.6.10',
'MAC.11.20', 'MAC.21.MAF0.5', 'MAF0.5.1', 'rep', 'data')
View(obs_MACbin_syn_exp)
obs_MACbin_fun_pcase = obs_MACbin_fun_exp = obs_MACbin_fun_pconf = obs_MACbin_syn_exp
obs_MACbin_syn_pconf = obs_MACbin_syn_exp
View(obs_MACbin_syn_pconf)
obs_MACbin_fun_pcase[j, 1:7] = funBins_pcase
View(obs_MACbin_fun_pcase)
obs_MACbin_fun_pcase[j, 9] <- paste0('RAREsim functional-', p_case, '%')
# prune the functional variants back to 100%
rem_fun = select_var(leg_fun, exp_fun)
